LOGS
CREATE TABLE logs (
    id INTEGER PRIMARY KEY NOT NULL,
    type TEXT NOT NULL,
    message TEXT NOT NULL,
    created_at TIMESTAMP
);
------------------------------------------------------------
USERS

CREATE TABLE users (
    id INTEGER PRIMARY KEY NOT NULL,
    username TEXT NOT NULL,
    hashed_pass TEXT NOT NULL
);

ALTER TABLE users
ADD COLUMN version INTEGER;

----------------------------------------------------------------
TASKS

CREATE TABLE tasks (
	id INTEGER PRIMARY KEY NOT NULL,
	description TEXT NOT NULL,
    done INTEGER NOT NULL,
    deleted INTEGER,
    created_at TIMESTAMP,
    user_id INTEGER,
    FOREIGN KEY (user_id)
        REFERENCES users
);

-----------------------------------------------------------------
CATEGORIES

CREATE TABLE categories (
	id INTEGER PRIMARY KEY NOT NULL,
	len INTEGER NOT NULL,
	deleted INTEGER NOT NULL,
	cat_name TEXT NOT NULL,
	user_id INTEGER,
	FOREIGN KEY (user_id)
	    REFERENCES users
);

-----------------------------------------------------------------
ITEMS

CREATE TABLE items (
	id INTEGER PRIMARY KEY NOT NULL,
	item_name TEXT NOT NULL,
	deleted INTEGER NOT NULL,
	cat_id INTEGER NOT NULL,
	FOREIGN KEY (cat_id)
        REFERENCES categories (id)
);

LATEST ONES
-------------
CREATE TABLE users (
    id INTEGER PRIMARY KEY NOT NULL,
    username TEXT NOT NULL,
    hashed_pass TEXT NOT NULL
);

ALTER TABLE users
ADD COLUMN version INTEGER;


CREATE TABLE logs (
    id INTEGER PRIMARY KEY NOT NULL,
    type TEXT NOT NULL,
    message TEXT NOT NULL,
    created_at TIMESTAMP
);

CREATE TABLE tasks (
	id INTEGER PRIMARY KEY NOT NULL,
	description TEXT NOT NULL,
    done INTEGER NOT NULL,
    deleted INTEGER,
    created_at TIMESTAMP,
    user_id INTEGER,
    FOREIGN KEY (user_id)
        REFERENCES users
);

CREATE TABLE categories (
	id INTEGER PRIMARY KEY NOT NULL,
	len INTEGER NOT NULL,
	deleted INTEGER NOT NULL,
	cat_name TEXT NOT NULL,
	user_id INTEGER,
	FOREIGN KEY (user_id)
	    REFERENCES users
);

CREATE TABLE items (
	id INTEGER PRIMARY KEY NOT NULL,
	item_name TEXT NOT NULL,
	deleted INTEGER NOT NULL,
	cat_id INTEGER NOT NULL,
	FOREIGN KEY (cat_id)
        REFERENCES categories (id)
);
